syntax = "proto3";

option go_package = ".;skill";

package skill;

service SkillService {
  rpc GetActions (GetActionRequest) returns (GetActionsResponse);
  rpc ExecuteAction (ExecuteActionRequest) returns (ExecuteActionResponse);
}

message GetActionRequest {
  string task = 1;
}

message GetActionsResponse {
  repeated Action actions = 1;
}

message Action {
  string name = 1;
  string description = 2;
  string method = 3; // e.g., "GET", "POST", "PATCH", "DELETE"
  string baseUrl = 4;
  string path = 5; // The specific endpoint path after the baseUrl
  repeated Parameter params = 6;
  map<string, string> headers = 7;
}

message Parameter {
  string name = 1;
  string type = 2; // e.g., "string", "integer", "boolean"
  string in = 3;   // "query" or "body" or "path"
  string description = 4;
  bool required = 5;
}

message ExecuteActionRequest {
  string name = 1; // Name of the action to execute
  map<string, string> queryParams = 2;
  map<string, string> bodyParams = 3; // Represent body parameters as a map
  map<string, string> pathParams = 4; // For parameters in the URL path
}

message ExecuteActionResponse {
  string response = 1; // The raw response from the API call (e.g., JSON string)
  // Optionally, you could add a 'status_code' if needed
}